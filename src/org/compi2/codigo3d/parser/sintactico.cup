package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER, OR, AND, NOT, IGUAL, MENORQUE, MAYORQUE, MAYORIGUAL , MENORIGUAL, DIFERENTE;
nonterminal NodoC3D inicial, expresion, condicion, relacion;

precedence left OR;
precedence left AND;
precedence left NOT;
precedence left IGUAL, DIFERENTE;
precedence left MAYORQUE, MENORQUE, MAYORIGUAL, MENORIGUAL;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} condicion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D("//Ãšltimo valor: " + exp.getCad());
                    :};

condicion ::= condicion:izq AND condicion:der
    {:
        String temp = ControlC3D.generaTemp();
        String c3d = temp + "=" + izq.getCad() + "&&" + der.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        RESULT = new NodoC3D(temp);
    :}
    | condicion:izq OR condicion:der
{:
        String temp = ControlC3D.generaTemp();
        String c3d = temp + "=" + izq.getCad() + "||" + der.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        RESULT = new NodoC3D(temp);
    :}
    | NOT condicion:izq
{:
        String temp = ControlC3D.generaTemp();
        String c3d = temp + "= !" + izq.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        RESULT = new NodoC3D(temp);
    :}
    | PAR_IZQ condicion:izq PAR_DER
    {: RESULT = izq; :}
    |expresion:izq relacion:en expresion:der
{:
        String temp = ControlC3D.generaTemp();
        String c3d = temp + "=" + izq.getCad() + en.getCad() + der.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        RESULT = new NodoC3D(temp);
    :}
   
;

relacion ::= IGUAL 
{:
    String temp = "==";
    RESULT = new NodoC3D(temp);

:}
    |DIFERENTE
{:
    String temp = "!=";
    RESULT = new NodoC3D(temp);

:}
    |MAYORQUE
{:
    String temp = ">";
    RESULT = new NodoC3D(temp);

:}
    |MENORQUE
{:
    String temp = "<";
    RESULT = new NodoC3D(temp);

:}
    |MAYORIGUAL
{:
    String temp = ">=";
    RESULT = new NodoC3D(temp);

:}
    |MENORIGUAL
{:
    String temp = "<=";
    RESULT = new NodoC3D(temp);

:}
;



expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;